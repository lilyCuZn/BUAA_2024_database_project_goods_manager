# Generated by Django 3.2.25 on 2024-11-23 13:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('web', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovalRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('operation_type', models.CharField(choices=[('PURCHASE_REQUEST', '物资采购申请'), ('INBOUND', '物资入库'), ('OUTBOUND', '物资出库'), ('DISPOSAL', '物资报废'), ('MAINTENANCE', '物资维修'), ('TRANSFER', '物资转移')], max_length=30)),
                ('status', models.CharField(choices=[('PENDING_SUBMISSION', '待提交'), ('PENDING_APPROVAL', '待审批'), ('IN_APPROVAL', '审批中'), ('APPROVED', '已批准'), ('REJECTED', '已拒绝'), ('CANCELLED', '已取消'), ('COMPLETED', '已完成'), ('RETURNED_FOR_REVISION', '退回修改')], max_length=30)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(max_length=300)),
                ('reply', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'approval_record',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('threshold', models.IntegerField()),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=11)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='InventoryRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('入库', '入库'), ('出库', '出库')], max_length=10)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('remarks', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'db_table': 'inventory_record',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'level',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('available', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField()),
                ('content', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'maintenance_record',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('price', models.FloatField()),
                ('status', models.CharField(choices=[('In', '库中'), ('BORROWING', '外借中'), ('OUT', '出库'), ('RETURNING', '归还中'), ('IN_MAINTENANCE', '维护中')], max_length=20)),
                ('damage_degree', models.CharField(choices=[('INTACT', '完好'), ('SLIGHT', '轻微磨损'), ('MODERATE', '适度损坏，不影响使用'), ('SERIOUS', '严重损坏，无法使用')], max_length=20)),
            ],
            options={
                'db_table': 'material',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=30)),
                ('phone', models.BigIntegerField()),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('identity', models.CharField(choices=[('admin', '管理员'), ('member', '普通成员')], max_length=7)),
            ],
            options={
                'db_table': 'member',
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('finish_time', models.DateTimeField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('status', models.CharField(choices=[('PROCURING', '采购中'), ('PROCURED', '已采购'), ('OVERDUE', '逾期'), ('UNQUALIFIED', '未满足要求的，与审批记录不相符')], max_length=20)),
            ],
            options={
                'db_table': 'purchase_order',
            },
        ),
        migrations.CreateModel(
            name='Shelf',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'shelf',
            },
        ),
        migrations.CreateModel(
            name='StockWarning',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('LOW_STOCK', '库存低于阈值'), ('EXPIRED', '过期'), ('DAMAGE', '损坏'), ('OTHER', '其他')], max_length=20)),
            ],
            options={
                'db_table': 'stock_warning',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'supplier',
            },
        ),
        migrations.CreateModel(
            name='Supplier_Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('quantity', models.IntegerField()),
            ],
            options={
                'db_table': 'supplier_product',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'warehouse',
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.warehouse')),
            ],
            options={
                'db_table': 'zone',
            },
        ),
        migrations.DeleteModel(
            name='tmp',
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['name'], name='idx_warehouse_name'),
        ),
        migrations.AddField(
            model_name='supplier_product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.category'),
        ),
        migrations.AddField(
            model_name='supplier_product',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.supplier'),
        ),
        migrations.AddField(
            model_name='stockwarning',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.material'),
        ),
        migrations.AddField(
            model_name='shelf',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.zone'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='approval',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.approvalrecord'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.category'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.supplier'),
        ),
        migrations.AddField(
            model_name='member',
            name='department_id',
            field=models.ForeignKey(db_column='department_id', on_delete=django.db.models.deletion.CASCADE, to='web.department'),
        ),
        migrations.AddField(
            model_name='material',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.category'),
        ),
        migrations.AddField(
            model_name='material',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.location'),
        ),
        migrations.AddField(
            model_name='material',
            name='purchase_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.purchaseorder'),
        ),
        migrations.AddField(
            model_name='maintenancerecord',
            name='approval',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.approvalrecord'),
        ),
        migrations.AddField(
            model_name='maintenancerecord',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.material'),
        ),
        migrations.AddField(
            model_name='maintenancerecord',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.member'),
        ),
        migrations.AddField(
            model_name='location',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.level'),
        ),
        migrations.AddField(
            model_name='level',
            name='shelf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.shelf'),
        ),
        migrations.AddField(
            model_name='inventoryrecord',
            name='approval',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.approvalrecord'),
        ),
        migrations.AddField(
            model_name='inventoryrecord',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.material'),
        ),
        migrations.AddField(
            model_name='inventoryrecord',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.member'),
        ),
        migrations.AddField(
            model_name='department',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.member'),
        ),
        migrations.AddField(
            model_name='approvalrecord',
            name='applicant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicant_records', to='web.member'),
        ),
        migrations.AddField(
            model_name='approvalrecord',
            name='approver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approver_records', to='web.member'),
        ),
        migrations.AddIndex(
            model_name='zone',
            index=models.Index(fields=['warehouse'], name='idx_zone_warehouse'),
        ),
        migrations.AddIndex(
            model_name='shelf',
            index=models.Index(fields=['zone'], name='idx_shelf_zone'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['level'], name='idx_location_level'),
        ),
        migrations.AddIndex(
            model_name='level',
            index=models.Index(fields=['shelf'], name='idx_level_shelf'),
        ),
    ]
